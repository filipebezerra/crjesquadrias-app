apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'realm-android'
apply plugin: 'com.getkeepsafe.dexcount'

//noinspection GroovyAssignabilityCheck
if (project.hasProperty("CRSEsquadriasRelease.signing")
        && new File(project.property("CRSEsquadriasRelease.signing") + ".gradle").exists()) {
    apply from: project.property("CRSEsquadriasRelease.signing") + ".gradle";
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "br.com.libertsolutions.crs.app"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 27101
        versionName "1.0.1"
        vectorDrawables.useSupportLibrary = true
        setProperty("archivesBaseName", "CRS-$versionName")
        buildConfigField "long", "SCHEMA_VERSION", "2L"
    }
    buildTypes {
        release {
            shrinkResources false
            minifyEnabled true
            proguardFile 'proguard-butterknife.pro'
            proguardFile 'proguard-crashlytics.pro'
            proguardFile 'proguard-eventbus-3.pro'
            proguardFile 'proguard-gson.pro'
            proguardFile 'proguard-retrolambda.pro'
            proguardFile 'proguard-rx-java.pro'
            proguardFile 'proguard-okhttp3.pro'
            proguardFile 'proguard-okio.pro'
            proguardFile 'proguard-retrofit2.pro'
            proguardFile 'proguard-support-design.pro'
            proguardFile 'proguard-support-v7-appcompat.pro'
            proguardFile 'proguard-support-v7-cardview.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

ext {
    support = '27.1.1'
    materialDialogs = '0.9.6.0'
    retrofit = '2.3.0'
    okhttp = '3.8.1'
    parcelableplease = '1.0.2'
    butterknife = '8.7.0'
    leakcanary = '1.5.1'
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {
    testImplementation 'junit:junit:4.12'

    // Support
    implementation "com.android.support:appcompat-v7:${support}"
    implementation "com.android.support:design:${support}"
    implementation "com.android.support:recyclerview-v7:${support}"
    implementation "com.android.support:cardview-v7:${support}"

    // View Injection
    implementation "com.jakewharton:butterknife:${butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterknife}"

    // Third MD Components
    implementation "com.afollestad.material-dialogs:core:${materialDialogs}"
    implementation "com.afollestad.material-dialogs:commons:${materialDialogs}"

    // Http
    implementation ("com.squareup.retrofit2:retrofit:${retrofit}") {
        exclude module: 'okhttp'
    }
    implementation "com.squareup.retrofit2:adapter-rxjava:${retrofit}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit}"
    implementation "com.squareup.okhttp3:okhttp:${okhttp}"
    implementation "com.squareup.okhttp3:logging-interceptor:${okhttp}"

    // Reactive Extensions
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.0'

    // Parcelable auto generator
    implementation "com.hannesdorfmann.parcelableplease:annotation:${parcelableplease}"
    annotationProcessor "com.hannesdorfmann.parcelableplease:processor:${parcelableplease}"

    // Crash Reporting
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true
    }

    // Logging
    implementation 'com.jakewharton.timber:timber:4.5.1'

    // Event Bus
    implementation 'org.greenrobot:eventbus:3.0.0'

    // Memory Leak Analyzer
    debugImplementation "com.squareup.leakcanary:leakcanary-android:${leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanary}"
}

dexcount {
    format = "list"
    includeFieldCount = true
    includeTotalMethodCount = true
    orderByMethodCount = true
    maxMethodCount = 65536
}